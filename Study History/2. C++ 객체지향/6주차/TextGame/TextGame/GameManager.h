#pragma once
#include "Console.h"
#include "SceneManager.h"


//extern int _stageHeight;											// 현 스테이지의 높이 Y(i)
//extern int _stageWidth;											// 현 스테이지의 너비 X(j)
//extern ObjectType _gameState[dfSCREEN_HEIGHT][dfSCREEN_WIDTH];	// 현 스테이지의 "현재" 상태

#pragma region Management

// ============================================================================
//						게임을 처음 실행했을 초기화!
// ---------------------------------------------------------------------------
// 1. 콘솔 제어를 위한 준비작업					cs_Initial()
// 2. 콘솔 버퍼를 초기화 하는 작업				Buffer_Clear()
// 3. 파일에서 데이터를 받을준비를 하는 작업		Data_Init()
// ============================================================================
void Game_Init();

// ============================================================================
//							게임 스테이지를 생성!
// ---------------------------------------------------------------------------
// 1. LoadObjectType()로 stageNum 번째 맵 데이터를 파일에서 불러온다.
// 2. 맵의 너이와 높비를 파싱한다.
// 3. 높이와 너비를 순회하며 하나씩 DATA SHEET 정수를 파싱한다
// 3-1. 플레이어 데이터를 만나면 해당 자리에 플레이어를 스폰합니다.
// 3-2. 몬스터 데이터를 만나면 해당 자리에 몬스터를 스폰합니다.
// ============================================================================
void Game_MakeStage(int stageNum);
#pragma endregion

#pragma region GamePlay
// ============================================================================
//							_gameState를 버퍼에 그리기
// ---------------------------------------------------------------------------
// _gameState를 전체 순회하며 화면에 출력할 버퍼에 하나씩 넣어줍니다.
// ' ' - 0 : 빈칸
// ---------------------------------------------------------------------------
// 1~9 : 맵오브젝트 관련
// '#' - 1 : 벽 (못감)
// 'O' - 2 : 포탈 (다음 스테이지로!)
// 
// ---------------------------------------------------------------------------
// 10 ~ 19 게임플레이 관련
// 'P' - 10 : player
// 11 : 투사체
// 투사체가 가지는 방향에따라 위'^' 오른쪽'>' 아래'v' 왼쪽'<' 
// 
// ---------------------------------------------------------------------------
// 20 ~ 몬스터 관련
// 'M' - 20 : 패턴없는 몬스터  
// 'R' - 21 : 돌맹이			(4방향 랜덤으로 구름)
// 'T' - 22 : 터렛			(직선상에 플레이어가 있음 투사체 발싸)
// 'q' - 23 : 도플갱어		(플레이어의 반대방향으로 이동)
// ============================================================================
void Game_DrawStage();


// ============================================================================
//							버퍼에 UI그리기
// ---------------------------------------------------------------------------
// player의 hp만큼 @를 출력합니다
// HP : @@@
// ============================================================================
void Game_DrawUi();



// ============================================================================
//							  게임 로직
// ---------------------------------------------------------------------------
// // 무한루프 안의 게임로직을 실행합니다
// SceneType::Title
//		엔터키 입력을 기다립니다.
// SceneType::Load
//		스테이지를 로딩합니다
// SceneType::InGame
//		게임중에 돌아갈 업데이트를 합니다!
//		1. 투사체 업데이트
//		2. 플레이어가 업데이트
//		3. 몬스터 업데이트
//		4. 버퍼에 그림그리기
// SceneType::Ending
//		엔딩씬을 그리며 게임을 종료합니다.
//		이때 false를 반환 합니다!
// ============================================================================
bool Game_Logic();


// ============================================================================
//							좌표에 있는 오브젝트
// ---------------------------------------------------------------------------
// 해당좌표의 ObjectType 값을 반환합니다.
// 이를 이용하여 충돌처리를 합니다.
// 예를들면 ObjectType::Empty = 갈 수 있는 곳 입니다.
// ============================================================================
ObjectType Game_FindObject(int iX, int iY);
ObjectType Game_FindObject(Position pos);


// ============================================================================
//							오브젝트 이동
// ---------------------------------------------------------------------------
// start에서 dest로 start에 있는 오브젝트를 이동시킵니다.
// 빈곳 ( Game_FindObject(dest) == ObjectType::Empty ) 
// 에서만 이동이 가능합니다.
// 빈곳이 아니라면 false, 이동했다면 true 를 반환합니다.
// ============================================================================
bool Game_MoveObject(Position start, Position dest);


// ============================================================================
//							오브젝트 생성
// ---------------------------------------------------------------------------
// pos위치를 _gameState 에서 확인하고 빈곳이면 type의 오브젝트를 등록합니다!
// _gameState[pos] = type
// ============================================================================
bool Game_CreateObject(Position pos, ObjectType type);

// ============================================================================
//							오브젝트 소멸
// ---------------------------------------------------------------------------
// _gameState[pos]의 데이터를 Empty로 바꿉니다!
// (pos)로도 사용할 수 있게 래핑해줍니다.
// ============================================================================
void Game_DissObject(Position pos);
void Game_DissObject(int iX, int iY);
#pragma endregion