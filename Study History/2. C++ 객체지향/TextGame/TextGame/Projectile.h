#pragma once
#include "Player.h"
#include "Monster.h"



// ============================================================================
//							투사체 구조체
// ---------------------------------------------------------------------------
// 게임상에서 한가지방향으로 날아가는 모든 오브젝트를 관리
// ============================================================================
struct Projectile {
	bool Visable;			// 활성화 되었냐?
	Position Pos;			// 투사체의 포지션
	ObjectType Owner;		// 투사체의 주인(이 투사체를 쏜 사람)
	Direction Dir;			// 투사체가 날아가는 방향
};

// extern Projectile _projectile[PROJECTILE_MAX];

// ============================================================================
//							투사체 초기화
// ---------------------------------------------------------------------------
// _projectile[] 을 처음부터 끝가지 순회하면서
// 초기값
// _projectile[i].Visable	= false
// _projectile[i].Pos		= (0,0)	
// _projectile[i].Owner		= empty
// _projectile[i].Dir		= none
// 를 차례대로 넣는다.
// ============================================================================
void Projectile_Init();


// ============================================================================
//							투사체 생성(발싸)
// ---------------------------------------------------------------------------
// _projectile[] 을 처음부터 끝가지 순회하면서
// _projectile[i].Visable == false인지점을 찾아 (없으면 리턴)
//  Pos, Owner, Dir값으로 방향을 계산해서 넣습니다.
// 다 넣었으면 Visable = true 가 됩니다.
// ============================================================================
bool Projectile_Fire(Position pos, ObjectType owner, Direction dir);

// ============================================================================
//							투사체 찾기
// ---------------------------------------------------------------------------
// _projectile[] 을 처음부터 끝가지 순회하면서
// _projectile[i].Visable == true 이면서
// _projectile[i].Pos == pos 인 지점을 찾아
// *_projectile[i]를 반환합니다.
// ============================================================================
Projectile* Projectile_Find(Position pos);
Projectile* Projectile_Find(int iX, int iY);

// ============================================================================
//							투사체 충돌
// ---------------------------------------------------------------------------
// 투사체 진행 도중 무언가 만남
// 몇번째 투사체, 맞은 객체를 받음
// target 과 _projectile.Owner 비교
// 서로 대상이 다르면 맞음 (Player / Monster) (Monster끼리 팀킬 불가능)
// ============================================================================
void Projectile_Hit(Projectile* projectile , ObjectType target);

// ============================================================================
//							투사체 소멸
// ---------------------------------------------------------------------------
// 게임 상테에서 삭제
// index 번째 투사체를 초기화
// _projectile[index] 의 값을 초기화 시켜줌
// ============================================================================
void Projectile_Diss(Projectile* projectile);


// ============================================================================
//							투사체 그리기
// ---------------------------------------------------------------------------
// 게임을 그릴때 좌표에있는 투사체를 찾아가지고
// dir 방향에 따라
// up(^) down(v) left(<) right(>)
// 그려주기
// ============================================================================
void Projectile_Draw(int iX, int iY);

// ============================================================================
//							투사체 업데이트
// ---------------------------------------------------------------------------
// _projectile[] 을 처음부터 끝가지 순회하면서
// _projectile[i].Visable이 true인 투사체를 찾아
// _projectile[i].Dir 방향대로 움직입니다.
// 움직일 수 없으면 _projectile[i].Dir 목적지의 오브젝트와 상호작용을 하고 
// 소멸(Visable = false) 합니다
// ============================================================================
void Projectile_Update();


