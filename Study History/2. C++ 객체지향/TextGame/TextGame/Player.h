#pragma once

#define PLAYER_MOVE_DELAY 50
#define PLAYER_ATTACK_DELAY 500

// ============================================================================
//						Player Input Enum
// ---------------------------------------------------------------------------
// 어떤 입려이 들어왔나?
// 지금은 몬스터 도플갱어에서만 사용
// ============================================================================
enum class PlayerInput{
	None = 0,
	Move,
	RangeAttack,
};

// ============================================================================
//						Player 구조체
// ---------------------------------------------------------------------------
// 현재좌표,방향, 입력! 저장
// ============================================================================
struct Player {
	Position Pos;		// 좌표
	Direction Dir;	// 마지막으로 바라본(키눌린) 방향 : 이방향으로 공격
	int Hp;
	PlayerInput Input; // 플레이어가 누른 키 : 몬스터 도플갱어에 사용 TODO : 따로 때놓기
};
// 전역으로 사용할 플레이어 오브젝트
extern Player _player;	  // 플레이어는 딱하나만 존재


// ============================================================================
//						Player 스폰
// ---------------------------------------------------------------------------
// GameLoadStage()에서만 호출!
// _gameState에 플레이어 좌표 등록하기
// _gameState[pos.Y][pos.X] = ObjectType::Player
// _player.Pos = pos
// ============================================================================
void Player_Spawn(Position pos);
void Player_Spawn(int iX, int iY);

// ============================================================================
//						Player 움직이기
// ---------------------------------------------------------------------------
// dir 방향대로 맵상에 1칸을 움직임
// 이동했으면 true, 못했으면 false
// 이동을 못했는데 못한이유가 포탈이라면 다음 스테이지로 갑니다
// 갈 수 있다면
// 1. 맵내의 좌표를 바꾸고
// 2. _player의 좌표를 바꾸고
// 3. Dir을 움직인 방향으로 바꿉니다.
// ============================================================================
ObjectType Player_Move(Direction dir);

// ============================================================================
//						Player 공격
// ---------------------------------------------------------------------------
// 투사체만 날릴 수 있음
// 투사체를 날릴곳을 계산한뒤
// 투사체 에게 발사 하라고 떠넘기기
// ============================================================================
void Player_Attack();

// ============================================================================
//						Player 업데이트
// ---------------------------------------------------------------------------
// 입력을 체크합니다
// _moveTickCount - 이동속도체크 카운터
// PLAYER_MOVE_DELAYms마다 한칸씩 움직입니다.
// 
// _attackTickCount - 공격속도체크 카운터
// PLAYER_ATTACK_DELAYms마다 공격을 날립니다.
// ============================================================================
void Player_Update();


// ============================================================================
//						Player 피격
// ---------------------------------------------------------------------------
// 맞으면 HP가 1 감소
// HP가 1이하가 되면 소멸
// ============================================================================
void Player_Hit();

// ============================================================================
//						Player 소멸
// ---------------------------------------------------------------------------
// 플레이어를 Game_DissObject로 _gameState에서 소멸시킨후
// 맵을 처음부터 다시 만듭니다!
// ============================================================================
void Player_Diss();


